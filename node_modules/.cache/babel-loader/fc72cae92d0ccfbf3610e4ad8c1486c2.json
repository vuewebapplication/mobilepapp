{"remainingRequest":"C:\\xampp\\htdocs\\jucel\\web-app\\vue-app\\mobilepapp\\node_modules\\thread-loader\\dist\\cjs.js!C:\\xampp\\htdocs\\jucel\\web-app\\vue-app\\mobilepapp\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\jucel\\web-app\\vue-app\\mobilepapp\\node_modules\\vuetify\\lib\\services\\lang\\index.js","dependencies":[{"path":"C:\\xampp\\htdocs\\jucel\\web-app\\vue-app\\mobilepapp\\node_modules\\vuetify\\lib\\services\\lang\\index.js","mtime":1645945713661},{"path":"C:\\xampp\\htdocs\\jucel\\web-app\\vue-app\\mobilepapp\\babel.config.js","mtime":1645945693352},{"path":"C:\\xampp\\htdocs\\jucel\\web-app\\vue-app\\mobilepapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645945579512},{"path":"C:\\xampp\\htdocs\\jucel\\web-app\\vue-app\\mobilepapp\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1645945579511},{"path":"C:\\xampp\\htdocs\\jucel\\web-app\\vue-app\\mobilepapp\\node_modules\\babel-loader\\lib\\index.js","mtime":1645945581350}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJDOi94YW1wcC9odGRvY3MvanVjZWwvd2ViLWFwcC92dWUtYXBwL21vYmlsZXBhcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrLmpzIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICJDOi94YW1wcC9odGRvY3MvanVjZWwvd2ViLWFwcC92dWUtYXBwL21vYmlsZXBhcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzLmpzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICJDOi94YW1wcC9odGRvY3MvanVjZWwvd2ViLWFwcC92dWUtYXBwL21vYmlsZXBhcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzLmpzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICJDOi94YW1wcC9odGRvY3MvanVjZWwvd2ViLWFwcC92dWUtYXBwL21vYmlsZXBhcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3RhcnRzLXdpdGguanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwovLyBFeHRlbnNpb25zCmltcG9ydCB7IFNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlJzsgLy8gVXRpbGl0aWVzCgppbXBvcnQgeyBnZXRPYmplY3RWYWx1ZUJ5UGF0aCB9IGZyb20gJy4uLy4uL3V0aWwvaGVscGVycyc7CmltcG9ydCB7IGNvbnNvbGVFcnJvciwgY29uc29sZVdhcm4gfSBmcm9tICcuLi8uLi91dGlsL2NvbnNvbGUnOwp2YXIgTEFOR19QUkVGSVggPSAnJHZ1ZXRpZnkuJzsKdmFyIGZhbGxiYWNrID0gU3ltYm9sKCdMYW5nIGZhbGxiYWNrJyk7CgpmdW5jdGlvbiBnZXRUcmFuc2xhdGlvbihsb2NhbGUsIGtleSkgewogIHZhciB1c2luZ0RlZmF1bHQgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IGZhbHNlOwogIHZhciBkZWZhdWx0TG9jYWxlID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgPyBhcmd1bWVudHNbM10gOiB1bmRlZmluZWQ7CiAgdmFyIHNob3J0S2V5ID0ga2V5LnJlcGxhY2UoTEFOR19QUkVGSVgsICcnKTsKICB2YXIgdHJhbnNsYXRpb24gPSBnZXRPYmplY3RWYWx1ZUJ5UGF0aChsb2NhbGUsIHNob3J0S2V5LCBmYWxsYmFjayk7CgogIGlmICh0cmFuc2xhdGlvbiA9PT0gZmFsbGJhY2spIHsKICAgIGlmICh1c2luZ0RlZmF1bHQpIHsKICAgICAgY29uc29sZUVycm9yKCJUcmFuc2xhdGlvbiBrZXkgXCIiLmNvbmNhdChzaG9ydEtleSwgIlwiIG5vdCBmb3VuZCBpbiBmYWxsYmFjayIpKTsKICAgICAgdHJhbnNsYXRpb24gPSBrZXk7CiAgICB9IGVsc2UgewogICAgICBjb25zb2xlV2FybigiVHJhbnNsYXRpb24ga2V5IFwiIi5jb25jYXQoc2hvcnRLZXksICJcIiBub3QgZm91bmQsIGZhbGxpbmcgYmFjayB0byBkZWZhdWx0IikpOwogICAgICB0cmFuc2xhdGlvbiA9IGdldFRyYW5zbGF0aW9uKGRlZmF1bHRMb2NhbGUsIGtleSwgdHJ1ZSwgZGVmYXVsdExvY2FsZSk7CiAgICB9CiAgfQoKICByZXR1cm4gdHJhbnNsYXRpb247Cn0KCmV4cG9ydCB2YXIgTGFuZyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1NlcnZpY2UpIHsKICBfaW5oZXJpdHMoTGFuZywgX1NlcnZpY2UpOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKExhbmcpOwoKICBmdW5jdGlvbiBMYW5nKHByZXNldCkgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBMYW5nKTsKCiAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpOwogICAgX3RoaXMuZGVmYXVsdExvY2FsZSA9ICdlbic7CiAgICB2YXIgX3ByZXNldCRMYW5nJHByb3BlcnR5ID0gcHJlc2V0W0xhbmcucHJvcGVydHldLAogICAgICAgIGN1cnJlbnQgPSBfcHJlc2V0JExhbmckcHJvcGVydHkuY3VycmVudCwKICAgICAgICBsb2NhbGVzID0gX3ByZXNldCRMYW5nJHByb3BlcnR5LmxvY2FsZXMsCiAgICAgICAgdCA9IF9wcmVzZXQkTGFuZyRwcm9wZXJ0eS50OwogICAgX3RoaXMuY3VycmVudCA9IGN1cnJlbnQ7CiAgICBfdGhpcy5sb2NhbGVzID0gbG9jYWxlczsKICAgIF90aGlzLnRyYW5zbGF0b3IgPSB0IHx8IF90aGlzLmRlZmF1bHRUcmFuc2xhdG9yOwogICAgcmV0dXJuIF90aGlzOwogIH0KCiAgX2NyZWF0ZUNsYXNzKExhbmcsIFt7CiAgICBrZXk6ICJjdXJyZW50TG9jYWxlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjdXJyZW50TG9jYWxlKGtleSkgewogICAgICB2YXIgdHJhbnNsYXRpb24gPSB0aGlzLmxvY2FsZXNbdGhpcy5jdXJyZW50XTsKICAgICAgdmFyIGRlZmF1bHRMb2NhbGUgPSB0aGlzLmxvY2FsZXNbdGhpcy5kZWZhdWx0TG9jYWxlXTsKICAgICAgcmV0dXJuIGdldFRyYW5zbGF0aW9uKHRyYW5zbGF0aW9uLCBrZXksIGZhbHNlLCBkZWZhdWx0TG9jYWxlKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJ0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiB0KGtleSkgewogICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgcGFyYW1zID0gbmV3IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHsKICAgICAgICBwYXJhbXNbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldOwogICAgICB9CgogICAgICBpZiAoIWtleS5zdGFydHNXaXRoKExBTkdfUFJFRklYKSkgcmV0dXJuIHRoaXMucmVwbGFjZShrZXksIHBhcmFtcyk7CiAgICAgIHJldHVybiB0aGlzLnRyYW5zbGF0b3IuYXBwbHkodGhpcywgW2tleV0uY29uY2F0KHBhcmFtcykpOwogICAgfQogIH0sIHsKICAgIGtleTogImRlZmF1bHRUcmFuc2xhdG9yIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBkZWZhdWx0VHJhbnNsYXRvcihrZXkpIHsKICAgICAgZm9yICh2YXIgX2xlbjIgPSBhcmd1bWVudHMubGVuZ3RoLCBwYXJhbXMgPSBuZXcgQXJyYXkoX2xlbjIgPiAxID8gX2xlbjIgLSAxIDogMCksIF9rZXkyID0gMTsgX2tleTIgPCBfbGVuMjsgX2tleTIrKykgewogICAgICAgIHBhcmFtc1tfa2V5MiAtIDFdID0gYXJndW1lbnRzW19rZXkyXTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRoaXMucmVwbGFjZSh0aGlzLmN1cnJlbnRMb2NhbGUoa2V5KSwgcGFyYW1zKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJyZXBsYWNlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZXBsYWNlKHN0ciwgcGFyYW1zKSB7CiAgICAgIHJldHVybiBzdHIucmVwbGFjZSgvXHsoXGQrKVx9L2csIGZ1bmN0aW9uIChtYXRjaCwgaW5kZXgpIHsKICAgICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqLwogICAgICAgIHJldHVybiBTdHJpbmcocGFyYW1zWytpbmRleF0pOwogICAgICB9KTsKICAgIH0KICB9XSk7CgogIHJldHVybiBMYW5nOwp9KFNlcnZpY2UpOwpMYW5nLnByb3BlcnR5ID0gJ2xhbmcnOw=="},{"version":3,"mappings":";;;;;;;;;;;AAAA;AACA,SAASA,OAAT,QAAwB,YAAxB,C,CAEA;;AACA,SAASC,oBAAT,QAAqC,oBAArC;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,oBAA1C;AASA,IAAMC,WAAW,GAAG,WAApB;AACA,IAAMC,QAAQ,GAAGC,MAAM,CAAC,eAAD,CAAvB;;AAEA,SAASC,cAAT,CACEC,MADF,EAEEC,GAFF,EAI8B;AAAA,MAD5BC,YAC4B,uEADb,KACa;AAAA,MAA5BC,aAA4B;AAE5B,MAAMC,QAAQ,GAAGH,GAAG,CAACI,OAAJ,CAAYT,WAAZ,EAAyB,EAAzB,CAAjB;AACA,MAAIU,WAAW,GAAGb,oBAAoB,CAACO,MAAD,EAASI,QAAT,EAAmBP,QAAnB,CAAtC;;AAEA,MAAIS,WAAW,KAAKT,QAApB,EAA8B;AAC5B,QAAIK,YAAJ,EAAkB;AAChBR,kBAAY,6BAAqBU,QAArB,8BAAZ;AACAE,iBAAW,GAAGL,GAAd;AAFF,WAGO;AACLN,iBAAW,6BAAqBS,QAArB,2CAAX;AACAE,iBAAW,GAAGP,cAAc,CAACI,aAAD,EAAgBF,GAAhB,EAAqB,IAArB,EAA2BE,aAA3B,CAA5B;AACD;AACF;;AAED,SAAOG,WAAP;AACD;;AAED,WAAaC,IAAb;AAAA;;AAAA;;AAWE,gBAAaC,MAAb,EAAkC;AAAA;;AAAA;;AAChC;AAPK,0BAAgB,IAAhB;AASL,gCAIIA,MAAM,CAACD,IAAI,CAACE,QAAN,CAJV;AAAA,QACEC,OADF,yBACEA,OADF;AAAA,QAEEC,OAFF,yBAEEA,OAFF;AAAA,QAGEC,CAHF,yBAGEA,CAHF;AAMA,UAAKF,OAAL,GAAeA,OAAf;AACA,UAAKC,OAAL,GAAeA,OAAf;AACA,UAAKE,UAAL,GAAkBD,CAAC,IAAI,MAAKE,iBAA5B;AAXgC;AAYjC;;AAvBH;AAAA;AAAA,WAyBS,uBAAeb,GAAf,EAA0B;AAC/B,UAAMK,WAAW,GAAG,KAAKK,OAAL,CAAa,KAAKD,OAAlB,CAApB;AACA,UAAMP,aAAa,GAAG,KAAKQ,OAAL,CAAa,KAAKR,aAAlB,CAAtB;AAEA,aAAOJ,cAAc,CAACO,WAAD,EAAcL,GAAd,EAAmB,KAAnB,EAA0BE,aAA1B,CAArB;AACD;AA9BH;AAAA;AAAA,WAgCS,WAAGF,GAAH,EAAgC;AAAA,wCAAbc,MAAa;AAAbA,cAAa;AAAA;;AACrC,UAAI,CAACd,GAAG,CAACe,UAAJ,CAAepB,WAAf,CAAL,EAAkC,OAAO,KAAKS,OAAL,CAAaJ,GAAb,EAAkBc,MAAlB,CAAP;AAElC,aAAO,KAAKF,UAAL,cAAgBZ,GAAhB,SAAwBc,MAAxB,EAAP;AACD;AApCH;AAAA;AAAA,WAsCU,2BAAmBd,GAAnB,EAAgD;AAAA,yCAAbc,MAAa;AAAbA,cAAa;AAAA;;AACtD,aAAO,KAAKV,OAAL,CAAa,KAAKY,aAAL,CAAmBhB,GAAnB,CAAb,EAAsCc,MAAtC,CAAP;AACD;AAxCH;AAAA;AAAA,WA0CU,iBAASG,GAAT,EAAsBH,MAAtB,EAAmC;AACzC,aAAOG,GAAG,CAACb,OAAJ,CAAY,YAAZ,EAA0B,UAACc,KAAD,EAAgBC,KAAhB,EAAiC;AAChE;AACA,eAAOC,MAAM,CAACN,MAAM,CAAC,CAACK,KAAF,CAAP,CAAb;AAFK,QAAP;AAID;AA/CH;;AAAA;AAAA,EAA0B5B,OAA1B;AACSe,gBAAmB,MAAnB","names":["Service","getObjectValueByPath","consoleError","consoleWarn","LANG_PREFIX","fallback","Symbol","getTranslation","locale","key","usingDefault","defaultLocale","shortKey","replace","translation","Lang","preset","property","current","locales","t","translator","defaultTranslator","params","startsWith","currentLocale","str","match","index","String"],"sourceRoot":"","sources":["../../../src/services/lang/index.ts"],"sourcesContent":["// Extensions\nimport { Service } from '../service'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport { consoleError, consoleWarn } from '../../util/console'\n\n// Types\nimport { VuetifyPreset } from 'vuetify/types/services/presets'\nimport {\n  VuetifyLocale,\n  Lang as ILang,\n} from 'vuetify/types/services/lang'\n\nconst LANG_PREFIX = '$vuetify.'\nconst fallback = Symbol('Lang fallback')\n\nfunction getTranslation (\n  locale: VuetifyLocale,\n  key: string,\n  usingDefault = false,\n  defaultLocale: VuetifyLocale\n): string {\n  const shortKey = key.replace(LANG_PREFIX, '')\n  let translation = getObjectValueByPath(locale, shortKey, fallback) as string | typeof fallback\n\n  if (translation === fallback) {\n    if (usingDefault) {\n      consoleError(`Translation key \"${shortKey}\" not found in fallback`)\n      translation = key\n    } else {\n      consoleWarn(`Translation key \"${shortKey}\" not found, falling back to default`)\n      translation = getTranslation(defaultLocale, key, true, defaultLocale)\n    }\n  }\n\n  return translation\n}\n\nexport class Lang extends Service implements ILang {\n  static property: 'lang' = 'lang'\n\n  public current: ILang['current']\n\n  public defaultLocale = 'en'\n\n  public locales: ILang['locales']\n\n  private translator: ILang['t']\n\n  constructor (preset: VuetifyPreset) {\n    super()\n\n    const {\n      current,\n      locales,\n      t,\n    } = preset[Lang.property]\n\n    this.current = current\n    this.locales = locales\n    this.translator = t || this.defaultTranslator\n  }\n\n  public currentLocale (key: string) {\n    const translation = this.locales[this.current]\n    const defaultLocale = this.locales[this.defaultLocale]\n\n    return getTranslation(translation, key, false, defaultLocale)\n  }\n\n  public t (key: string, ...params: any[]) {\n    if (!key.startsWith(LANG_PREFIX)) return this.replace(key, params)\n\n    return this.translator(key, ...params)\n  }\n\n  private defaultTranslator (key: string, ...params: any[]) {\n    return this.replace(this.currentLocale(key), params)\n  }\n\n  private replace (str: string, params: any[]) {\n    return str.replace(/\\{(\\d+)\\}/g, (match: string, index: string) => {\n      /* istanbul ignore next */\n      return String(params[+index])\n    })\n  }\n}\n"]}]}